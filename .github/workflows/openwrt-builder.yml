#!/bin/bash
#=================================================
# OpenWrt Kwrt 定制编译脚本
# 版本：2024.06
#=================================================

set -eo pipefail
shopt -s extglob

# 初始化环境变量
REPO_TOKEN=${REPO_TOKEN:-}
KWRT_PKG_BRANCH="main"
OPENWRT_BRANCH="openwrt-24.10"
IMMORTALWRT_BRANCH="openwrt-24.10"

# 1. 配置软件源
echo "🔧 配置软件源..."
{
  echo "src-git packages https://github.com/coolsnowwolf/packages"
  echo "src-git luci https://github.com/coolsnowwolf/luci"
  echo "src-git routing https://github.com/coolsnowwolf/routing"
  echo "src-git kiddin9 https://github.com/kiddin9/kwrt-packages.git;$KWRT_PKG_BRANCH"
} > feeds.conf.default

# 2. 修改编译配置
echo "⚙️ 调整编译参数..."
sed -i "s?targets/%S/packages?targets/%S/\$(LINUX_VERSION)?" include/feeds.mk
sed -i '/	refresh_config();/d' scripts/feeds

# 3. 更新软件源
echo "🔄 更新软件源..."
./scripts/feeds update -a
./scripts/feeds install -a -p kiddin9 -f
./scripts/feeds install -a

# 4. 系统基础定制
echo "🏗️ 系统基础定制..."
sed -i "s#%C\"#%C by Kiddin'\"#" package/base-files/files/etc/os-release
sed -i "s/192.168.1/10.0.0/" package/base-files/files/bin/config_generate

# 5. 下载必要组件
echo "📥 下载组件..."
wget_deps() {
  local base_url="https://github.com/immortalwrt/immortalwrt/raw/refs/heads/$IMMORTALWRT_BRANCH"
  mkdir -p package/kernel/linux/modules/ package/network/utils/nftables/patches/ \
           package/libs/libnftnl/patches/ package/firmware/wireless-regdb/patches/
  
  wget -qN $base_url/package/kernel/linux/modules/video.mk -P package/kernel/linux/modules/
  wget -qN $base_url/package/network/utils/nftables/patches/{001,002}-*.patch -P package/network/utils/nftables/patches/
  wget -qN $base_url/package/libs/libnftnl/patches/001-*.patch -P package/libs/libnftnl/patches/
  wget -qN $base_url/package/firmware/wireless-regdb/patches/600-*.patch -P package/firmware/wireless-regdb/patches/
  wget -qN $base_url/config/Config-kernel.in -P config/
}
wget_deps

# 6. 替换关键组件
echo "🔄 替换核心组件..."
git_clone_path() {
  local branch=$1 repo=$2 paths=${@:3}
  for path in $paths; do
    rm -rf $path
    git clone --depth=1 -b $branch $repo $path
  done
}

rm -rf package/libs/openssl package/network/services/ppp
git_clone_path $OPENWRT_BRANCH https://github.com/immortalwrt/immortalwrt \
  package/libs/openssl package/network/services/ppp

# 7. 版本控制
echo "🏷️ 设置版本信息..."
echo "$(date +"%s")" > version.date
sed -i "/REVISION:=/c\REVISION:=$(date +%m.%d.%Y)" include/version.mk
sed -i '/VERSION_CODE:=/c\VERSION_CODE:=$(REVISION)' include/version.mk

# 8. 编译优化
echo "⚡ 编译优化..."
sed -i '/$(curdir)\/compile:/c\$(curdir)/compile: package/opkg/host/compile' package/Makefile
sed -i "s/DEFAULT_PACKAGES:=/DEFAULT_PACKAGES:=luci-app-advancedplus luci-app-firewall luci-app-package-manager /" include/target.mk
sed -i "s/procd-ujail//" include/target.mk
sed -i "s/^.*vermagic$/\techo '1' > \$(LINUX_DIR)\/.vermagic/" include/kernel-defaults.mk

# 9. 等待kwrt-packages构建完成
if [ -n "$REPO_TOKEN" ]; then
  echo "⏳ 检查kwrt-packages构建状态..."
  status=$(curl -sH "Authorization: token $REPO_TOKEN" \
    "https://api.github.com/repos/kiddin9/kwrt-packages/actions/runs" \
    | jq -r '.workflow_runs[0].status')
  
  while [[ "$status" == "in_progress" || "$status" == "queued" ]]; do
    echo "⏱️ 构建进行中，等待5秒..."
    sleep 5
    status=$(curl -sH "Authorization: token $REPO_TOKEN" \
      "https://api.github.com/repos/kiddin9/kwrt-packages/actions/runs" \
      | jq -r '.workflow_runs[0].status')
  done
fi

# 10. 清理临时文件
echo "🧹 清理工作..."
mv -f feeds/kiddin9/r81* tmp/ 2>/dev/null || true

# 11. 其他优化
echo "🎛️ 系统调优..."
sed -i 's/max_requests 3/max_requests 20/g' package/network/services/uhttpd/files/uhttpd.config
sed -i "s/tty\(0\|1\)::askfirst/tty\1::respawn/g" target/linux/*/base-files/etc/inittab
sed -i 's/option timeout 30/option timeout 60/g' package/system/rpcd/files/rpcd.config

# 12. 统一命名
echo "🏷️ 统一品牌标识..."
sed -i "s/OpenWrt/Kwrt/g" \
  package/base-files/files/bin/config_generate \
  package/base-files/image-config.in \
  include/version.mk \
  2>/dev/null || true

echo "✅ 所有预处理步骤已完成！"
