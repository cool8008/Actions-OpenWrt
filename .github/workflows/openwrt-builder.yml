name: OpenWrt Builder with KWRT Packages

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  KWRT_PKG_URL: https://github.com/kiddin9/kwrt-packages.git
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
          gettext git java-propose-classpath libelf-dev libncurses5-dev \
          libncursesw5-dev libssl-dev python3 python3-distutils python3-setuptools \
          rsync unzip zlib1g-dev wget curl

    - name: Clone Source
      run: |
        git clone --depth 1 ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt
        cd openwrt

    - name: Configure KWRT Feeds
      run: |
        cd openwrt
        # 添加并配置KWRT源
        echo "src-git kiddin9 ${{ env.KWRT_PKG_URL }};main" >> feeds.conf.default
        sed -i "/telephony/d" feeds.conf.default
        
        # 修复feeds配置
        sed -i "s?targets/%S/packages?targets/%S/\$(LINUX_VERSION)?" include/feeds.mk
        sed -i '/refresh_config();/d' scripts/feeds

        # 更新并安装feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a -p kiddin9 -f
        
        # 安装核心依赖
        ./scripts/feeds install libbpf
        ./scripts/feeds install kmod-media-core
        ./scripts/feeds install v2ray-plugin
        ./scripts/feeds install minisign
        ./scripts/feeds install kmod-gobinet
        ./scripts/feeds install shadowsocks-rust
        ./scripts/feeds install nginx-mod-dav-ext
        ./scripts/feeds install xray-geodata
        ./scripts/feeds install ChinaDNS

    - name: Apply Dependency Fixes
      run: |
        cd openwrt
        # 修复特定包的依赖问题
        sed -i '/DEPENDS:=/s/kmod-media-core//' package/kernel/linux/Makefile
        sed -i '/DEPENDS:=/s/antiblock//' package/feeds/kiddin9/luci-app-antiblock/Makefile
        sed -i '/DEPENDS:=/s/v2ray-plugin//' package/feeds/kiddin9/luci-app-bypass/Makefile
        sed -i '/DEPENDS:=/s/minisign//' package/feeds/kiddin9/luci-app-dnscrypt-proxy2/Makefile
        sed -i '/DEPENDS:=/s/kmod-gobinet//' package/feeds/kiddin9/luci-app-gobinetmodem/Makefile
        sed -i '/DEPENDS:=/s/rkp-ipid//' package/feeds/kiddin9/luci-app-school/Makefile
        sed -i '/DEPENDS:=/s/kmod-sprd_pcie//' package/feeds/kiddin9/luci-app-spdmodem/Makefile
        sed -i '/DEPENDS:=/s/shadowsocks-rust-config//' package/feeds/kiddin9/luci-app-ssrust/Makefile
        sed -i '/DEPENDS:=/s/nginx-mod-dav-ext//' package/feeds/kiddin9/luci-app-webdav/Makefile
        sed -i '/DEPENDS:=/s/xray-geodata//' package/feeds/kiddin9/luci-app-xjay/Makefile
        sed -i '/DEPENDS:=/s/ChinaDNS//' package/feeds/kiddin9/openwrt-dist-luci/Makefile

        # 修复libbpf依赖
        [ ! -d "package/libs/libbpf" ] && \
          git clone https://github.com/openwrt/packages package/openwrt-packages -b master && \
          cp -r package/openwrt-packages/libs/libbpf package/libs/

    - name: Build Preparation
      run: |
        cd openwrt
        # 基础配置
        echo "$(date +%s)" > version.date
        sed -i "s/192.168.1/10.0.0/" package/base-files/files/bin/config_generate
        sed -i "s/OpenWrt/Kwrt/g" package/base-files/files/bin/config_generate

        # 确保关键包存在
        [ ! -d "package/feeds/packages/nginx" ] && \
          ./scripts/feeds install -p packages nginx
        [ ! -d "package/feeds/packages/v2ray-core" ] && \
          git clone https://github.com/XTLS/Xray-core package/feeds/kiddin9/v2ray-core

    - name: Download Packages
      run: |
        cd openwrt
        make defconfig
        for i in {1..3}; do
          make download -j$(nproc) && break || sleep 10
        done
        find dl -size -1k -delete

    - name: Build Firmware
      run: |
        cd openwrt
        make -j$(($(nproc)+1)) || make -j1 V=s

        DEVICE_NAME=$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/')
        echo "DEVICE_NAME=${DEVICE_NAME:-generic}" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-${{ env.DEVICE_NAME }}-${{ env.BUILD_DATE }}
        path: openwrt/bin/targets/*/*
        retention-days: 7
