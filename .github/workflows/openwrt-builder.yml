name: OpenWrt Build with KWRT Fix

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Perform clean build'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  KWRT_FEED_URL: https://github.com/kiddin9/kwrt-packages.git
  IMMORTALWRT_BRANCH: openwrt-24.10
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential ccache ecj fastjar file g++ gawk gettext git \
          libelf-dev libncurses5-dev libssl-dev rsync unzip wget zlib1g-dev \
          python3 python3-distutils python3-setuptools

    - name: Clone OpenWrt Source
      run: |
        git clone --depth 1 ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt
        cd openwrt

    - name: Configure Feeds
      run: |
        cd openwrt
        # 添加并修改feeds配置
        echo "src-git kiddin9 ${{ env.KWRT_FEED_URL }};main" >> feeds.conf.default
        sed -i "/telephony/d; s?targets/%S/packages?targets/%S/\$(LINUX_VERSION)?" feeds.conf.default
        sed -i '/refresh_config();/d' scripts/feeds

        # 更新并安装feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a -p kiddin9 -f
        ./scripts/feeds install -a

    - name: Fix Core Dependencies
      run: |
        cd openwrt
        # 安装关键依赖
        ./scripts/feeds install \
          kmod-media-core \
          kmod-gobinet \
          kmod-sprd_pcie \
          v2ray-plugin \
          minisign \
          shadowsocks-rust \
          nginx-mod-dav-ext \
          xray-geodata \
          ChinaDNS

        # 修复libbpf依赖
        if [ ! -d "package/libs/libbpf" ]; then
          git clone https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git --depth=1
          mkdir -p package/libs/libbpf
          cp -r bpf-next/tools/lib/bpf/* package/libs/libbpf/
          cat > package/libs/libbpf/Makefile <<EOF
include \$(TOPDIR)/rules.mk

PKG_NAME:=libbpf
PKG_VERSION:=0.8.0
PKG_RELEASE:=1

PKG_SOURCE_URL:=file://\$(CURDIR)/bpf-next
PKG_SOURCE_PROTO:=git
PKG_MIRROR_HASH:=skip

include \$(INCLUDE_DIR)/package.mk

define Package/libbpf
  SECTION:=libs
  CATEGORY:=Libraries
  TITLE:=BPF CO-RE library
  DEPENDS:=+libelf
endef

define Build/Compile
  \$(MAKE) -C \$(PKG_BUILD_DIR) \
    CC="\$(TARGET_CC)" \
    AR="\$(TARGET_AR)" \
    CFLAGS="\$(TARGET_CFLAGS)" \
    all
endef

define Package/libbpf/install
	\$(INSTALL_DIR) \$(1)/usr/lib
	\$(CP) \$(PKG_BUILD_DIR)/libbpf.a \$(1)/usr/lib/
	\$(CP) \$(PKG_BUILD_DIR)/libbpf.so* \$(1)/usr/lib/
endef

\$(eval \$(call BuildPackage,libbpf))
EOF
        fi

    - name: Patch Problematic Makefiles
      run: |
        cd openwrt
        # 修复内核模块依赖
        sed -i '/DEPENDS:=.*kmod-media-core/d' package/kernel/linux/Makefile
        
        # 修复其他包的依赖
        for pkg in \
          luci-app-antiblock \
          luci-app-bypass \
          luci-app-dnscrypt-proxy2 \
          luci-app-gobinetmodem \
          luci-app-passwall \
          luci-app-passwall2 \
          luci-app-school \
          luci-app-spdmodem \
          luci-app-ssr-plus \
          luci-app-ssrust \
          luci-app-webdav \
          luci-app-xjay \
          openwrt-dist-luci \
          openwrt-einat-ebpf
        do
          find package/feeds/kiddin9/$pkg -name Makefile | xargs sed -i \
            -e '/DEPENDS:=.*antiblock/d' \
            -e '/DEPENDS:=.*v2ray-plugin/d' \
            -e '/DEPENDS:=.*minisign/d' \
            -e '/DEPENDS:=.*rkp-ipid/d' \
            -e '/DEPENDS:=.*shadowsocks-rust-config/d' \
            -e '/DEPENDS:=.*nginx-mod-dav-ext/d' \
            -e '/DEPENDS:=.*xray-geodata/d' \
            -e '/DEPENDS:=.*ChinaDNS/d' \
            -e '/DEPENDS:=.*libbpf/d'
        done

        # 补充缺失的包
        [ ! -d "package/feeds/kiddin9/rkp-ipid" ] && \
          svn export https://github.com/immortalwrt/packages/trunk/net/rkp-ipid package/feeds/kiddin9/rkp-ipid

    - name: Final Configuration
      run: |
        cd openwrt
        # 应用基础配置
        echo "$(date +%s)" > version.date
        sed -i "s/192.168.1/10.0.0/" package/base-files/files/bin/config_generate
        sed -i "s/OpenWrt/Kwrt/g" package/base-files/files/bin/config_generate
        echo "CONFIG_ALL=y" >> .config
        make defconfig

    - name: Download Packages
      run: |
        cd openwrt
        for i in {1..3}; do
          make -j$(nproc) download && break
          sleep 10
          [ $i -eq 3 ] && make -j1 download V=s
        done
        find dl -size -1k -delete

    - name: Build Firmware
      run: |
        cd openwrt
        make -j$(($(nproc)+1)) || make -j1 V=s

        # 获取设备信息
        DEVICE_NAME=$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/')
        echo "DEVICE_NAME=${DEVICE_NAME:-generic}" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-${{ env.DEVICE_NAME }}-${{ env.BUILD_DATE }}
        path: openwrt/bin/targets/*/*
        retention-days: 7
