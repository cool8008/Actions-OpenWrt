name: OpenWrt Builder with Kwrt Packages

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Perform clean build'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  KWRT_PKG_URL: https://github.com/kiddin9/kwrt-packages.git
  IMMORTALWRT_BRANCH: openwrt-24.10
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Load custom configuration
      run: |
        function git_clone_path() {
          trap 'rm -rf "$tmpdir"' EXIT
          branch="$1" rurl="$2" mv="$3"
          [[ "$mv" != "mv" ]] && shift 2 || shift 3
          rootdir="$PWD"
          tmpdir="$(mktemp -d)" || exit 1
          if [ ${#branch} -lt 10 ]; then
          git clone -b "$branch" --depth 1 --filter=blob:none --sparse "$rurl" "$tmpdir"
          cd "$tmpdir"
          else
          git clone --filter=blob:none --sparse "$rurl" "$tmpdir"
          cd "$tmpdir"
          git checkout $branch
          fi
          if [ "$?" != 0 ]; then
            echo "error on $rurl"
            exit 1
          fi
          git sparse-checkout init --cone
          git sparse-checkout set $@
          [[ "$mv" != "mv" ]] && cp -rn ./* $rootdir/ || mv -n $@/* $rootdir/$@/
          cd $rootdir
          }
        export -f git_clone_path
        
        # 复制项目文件
        cp -rf $GITHUB_WORKSPACE openwrt/
        cd openwrt

        # 添加 KWRT 软件源
        sed -i '$a src-git kiddin9 https://github.com/kiddin9/kwrt-packages.git;main' feeds.conf.default
        sed -i "/telephony/d" feeds.conf.default

        # 修改 feeds 配置
        sed -i "s?targets/%S/packages?targets/%S/\$(LINUX_VERSION)?" include/feeds.mk
        sed -i '/	refresh_config();/d' scripts/feeds

        # 更新并安装 feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a -p kiddin9 -f
        ./scripts/feeds install -a

        # 基础配置修改
        sed --follow-symlinks -i "s#%C\"#%C by Kiddin'\"#" package/base-files/files/etc/os-release
        sed -i -e '$a /etc/bench.log' \
                -e '/\/etc\/profile/d' \
                -e '/\/etc\/shinit/d' \
                package/base-files/files/lib/upgrade/keep.d/base-files-essential
        sed -i -e '/^\/etc\/profile/d' \
                -e '/^\/etc\/shinit/d' \
                package/base-files/Makefile
        sed -i "s/192.168.1/10.0.0/" package/base-files/files/bin/config_generate

        # 下载必要补丁
        wget -N https://github.com/immortalwrt/immortalwrt/raw/refs/heads/openwrt-24.10/package/kernel/linux/modules/video.mk -P package/kernel/linux/modules/
        wget -N https://github.com/immortalwrt/immortalwrt/raw/refs/heads/openwrt-24.10/package/network/utils/nftables/patches/002-nftables-add-fullcone-expression-support.patch -P package/network/utils/nftables/patches/
        wget -N https://github.com/immortalwrt/immortalwrt/raw/refs/heads/openwrt-24.10/package/network/utils/nftables/patches/001-drop-useless-file.patch -P package/network/utils/nftables/patches/
        wget -N https://github.com/immortalwrt/immortalwrt/raw/refs/heads/openwrt-24.10/package/libs/libnftnl/patches/001-libnftnl-add-fullcone-expression-support.patch -P package/libs/libnftnl/patches/
        wget -N https://github.com/immortalwrt/immortalwrt/raw/refs/heads/openwrt-24.10/package/firmware/wireless-regdb/patches/600-custom-change-txpower-and-dfs.patch -P package/firmware/wireless-regdb/patches/
        wget -N https://github.com/immortalwrt/immortalwrt/raw/refs/heads/master/config/Config-kernel.in -P config/

        # 替换核心组件
        rm -rf package/libs/openssl package/network/services/ppp
        git_clone_path openwrt-24.10 https://github.com/immortalwrt/immortalwrt package/libs/openssl package/network/services/ppp

        # 版本信息处理
        echo "$(date +"%s")" >version.date
        date=`date +%m.%d.%Y`
        sed -i -e "/\(# \)\?REVISION:=/c\REVISION:=$date" -e '/VERSION_CODE:=/c\VERSION_CODE:=$(REVISION)' include/version.mk

        # 构建系统调整
        sed -i '/$(curdir)\/compile:/c\$(curdir)/compile: package/opkg/host/compile' package/Makefile
        sed -i "s/DEFAULT_PACKAGES:=/DEFAULT_PACKAGES:=luci-app-advancedplus luci-app-firewall luci-app-package-manager luci-app-upnp luci-app-syscontrol luci-proto-wireguard luci-app-wizard luci-base luci-compat luci-lib-ipkg luci-lib-fs coremark wget-ssl curl autocore htop nano zram-swap kmod-lib-zstd kmod-tcp-bbr bash openssh-sftp-server block-mount resolveip ds-lite swconfig luci-app-fan luci-app-filemanager /" include/target.mk
        sed -i "s/procd-ujail//" include/target.mk
        sed -i "s/^.*vermagic$/\techo '1' > \$(LINUX_DIR)\/.vermagic/" include/kernel-defaults.mk

        # 等待 KWRT 包构建完成
        status=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s "https://api.github.com/repos/kiddin9/kwrt-packages/actions/runs" | jq -r '.workflow_runs[0].status')
        echo "$status"
        while [[ "$status" == "in_progress" || "$status" == "queued" ]];do
          echo "wait 5s"
          sleep 5
          status=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s "https://api.github.com/repos/kiddin9/kwrt-packages/actions/runs" | jq -r '.workflow_runs[0].status')
        done

        # 其他调整
        mv -f feeds/kiddin9/r81* tmp/
        wget -N https://raw.githubusercontent.com/openwrt/packages/master/lang/golang/golang/Makefile -P feeds/packages/lang/golang/golang/
        rm -rf package/system/fstools
        git_clone_path master https://github.com/coolsnowwolf/lede mv target/linux/generic/hack-6.6 package/system/fstools
        rm -rf target/linux/generic/hack-6.6/929-Revert-genetlink* target/linux/generic/hack-6.6/767-net-phy-realtek-add-led*
        wget -N https://raw.githubusercontent.com/coolsnowwolf/lede/master/target/linux/generic/pending-6.6/613-netfilter_optional_tcp_window_check.patch -P target/linux/generic/pending-6.6/
        sed -i 's/max_requests 3/max_requests 20/g' package/network/services/uhttpd/files/uhttpd.config
        sed -i "s/tty\(0\|1\)::askfirst/tty\1::respawn/g" target/linux/*/base-files/etc/inittab
        sed -i 's/option timeout 30/option timeout 60/g' package/system/rpcd/files/rpcd.config
        sed -i 's#20) \* 1000#60) \* 1000#g' feeds/luci/modules/luci-base/htdocs/luci-static/resources/rpc.js

        # 应用自定义配置
        if [ -f "$GITHUB_WORKSPACE/.config" ]; then
          cat $GITHUB_WORKSPACE/.config >> .config
        fi

    - name: Download Packages
      run: |
        cd openwrt
        echo "::group::⬇️ Downloading packages"
        make defconfig
        for attempt in {1..3}; do
          if make -j$(($(nproc)*2)) download; then
            break
          elif [ $attempt -eq 3 ]; then
            find dl -size -1k -delete
            make -j1 download V=s
          fi
          sleep 10
        done
        echo "::endgroup::"

    - name: Build Firmware
      run: |
        cd openwrt
        echo "::group::🔨 Building firmware"
        make -j$(($(nproc)+1)) || {
          echo "::warning::Parallel build failed, retrying with single thread..."
          make -j1 V=s
        }
        
        DEVICE_NAME=$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' || echo "generic")
        echo "DEVICE_NAME=${DEVICE_NAME}" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV
        echo "::endgroup::"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-${{ env.DEVICE_NAME }}-${{ env.BUILD_DATE }}
        path: openwrt/bin/targets/*/*
        retention-days: 7
