name: OpenWrt Builder with Kwrt Packages

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Perform clean build'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  KWRT_PKG_URL: https://github.com/kiddin9/kwrt-packages.git
  IMMORTALWRT_BRANCH: openwrt-24.10
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Load custom configuration
      run: |
        function git_clone_path() {
          trap 'rm -rf "$tmpdir"' EXIT
          branch="$1" rurl="$2" mv="$3"
          [[ "$mv" != "mv" ]] && shift 2 || shift 3
          rootdir="$PWD"
          tmpdir="$(mktemp -d)" || exit 1
          if [ ${#branch} -lt 10 ]; then
          git clone -b "$branch" --depth 1 --filter=blob:none --sparse "$rurl" "$tmpdir"
          cd "$tmpdir"
          else
          git clone --filter=blob:none --sparse "$rurl" "$tmpdir"
          cd "$tmpdir"
          git checkout $branch
          fi
          if [ "$?" != 0 ]; then
            echo "error on $rurl"
            exit 1
          fi
          git sparse-checkout init --cone
          git sparse-checkout set $@
          [[ "$mv" != "mv" ]] && cp -rn ./* $rootdir/ || mv -n $@/* $rootdir/$@/
          cd $rootdir
          }
        export -f git_clone_path
        cp -rf $GITHUB_WORKSPACE. openwrt/
        cp -rf $GITHUB_WORKSPACE/. openwrt/
        cp -rf $GITHUB_WORKSPACE openwrt/
        cd openwrt
        chmod +x $GITHUB_WORKSPACE$DIY_P1_SH
        /bin/bash "$GITHUB_WORKSPACE$DIY_SH"
        cp -f $GITHUB_WORKSPACE/.config
        if [ -f "$GITHUB_WORKSPACE/$CONFIG_FILE" ]; then
          echo >> .config
          cat $GITHUB_WORKSPACE/$CONFIG_FILE >> .config
        fi
        if [ -f "$GITHUB_WORKSPACE/$DIY_SH" ]; then
          chmod +x $GITHUB_WORKSPACE/$DIY_SH
          echo "/bin/bash $GITHUB_WORKSPACE/$DIY_SH"
          /bin/bash "$GITHUB_WORKSPACE/$DIY_SH"
        fi
        cp -Rf ./diy/* ./ || true
        
    - name: Download Packages
      run: |
        cd openwrt
        echo "::group::⬇️ Downloading packages"
        make defconfig
        for attempt in {1..3}; do
          if make -j$(($(nproc)*2)) download; then
            break
          elif [ $attempt -eq 3 ]; then
            find dl -size -1k -delete
            make -j1 download V=s
          fi
          sleep 10
        done
        echo "::endgroup::"

    - name: Build Firmware
      run: |
        cd openwrt
        echo "::group::🔨 Building firmware"
        make -j$(($(nproc)+1)) || {
          echo "::warning::Parallel build failed, retrying with single thread..."
          make -j1 V=s
        }
        
        DEVICE_NAME=$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' || echo "generic")
        echo "DEVICE_NAME=${DEVICE_NAME}" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV
        echo "::endgroup::"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-${{ env.DEVICE_NAME }}-${{ env.BUILD_DATE }}
        path: openwrt/bin/targets/*/*
        retention-days: 7
